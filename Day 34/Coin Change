class Solution {
    unordered_map<int, int> memo;
public:
    int coinChange(vector<int>& coins, int amount) {
        if (amount == 0) return 0;
        if (memo.count(amount)) return memo[amount];
        int ans = INT_MAX;
        for (int i = 0; i < coins.size(); i++) {
            if (amount - coins[i] >= 0) {
                int subAns = coinChange(coins, amount - coins[i]);
                if (subAns != -1) {  
                    ans = min(ans, subAns + 1);
                }
            }
        }
        memo[amount] = (ans == INT_MAX) ? -1 : ans;
        return memo[amount];
    }
};
