//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends


class Solution 
{
    public:
    	int minSwaps(vector<int>& nums) {
        int n = nums.size();
        vector<pair<int, int>> a(n);
         for (int i = 0; i < n; i++) {
            a[i] = make_pair(nums[i], i);
        }
        sort(a.begin(), a.end());

        vector<bool> visited(n, false);
        int ans = 0;

        for (int i = 0; i < n; i++) {
           if (visited[i] || a[i].second == i) {
                continue;
            }
            int cycleSize = 0;
            int x = i;

            while (!visited[x]) {
                visited[x] = true;
                x = a[x].second;
                cycleSize++;
            }
             if (cycleSize > 1) {
                ans += (cycleSize - 1);
            }
        }

        return ans;
    }
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
